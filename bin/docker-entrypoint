#!/bin/bash
set -e

# Configura permissões (executado como root)
if [ "$(id -u)" = "0" ]; then
    # Ajusta permissões para o usuário rails
    chown -R rails:rails /rails/log /rails/tmp
    chmod -R 775 /rails/log
    chmod -R 777 /rails/tmp
    touch /rails/log/production.log
    chmod 664 /rails/log/production.log
    
    # Executa o comando como usuário rails
    exec su-exec rails "$@"
fi

# Configuração do jemalloc
if [ -z "${LD_PRELOAD+x}" ]; then
    LD_PRELOAD=$(find /usr/lib -name libjemalloc.so.2 -print -quit)
    export LD_PRELOAD
fi

# Configuração de credentials em desenvolvimento
if [ "$RAILS_ENV" = "development" ] && [ ! -f config/credentials.yml.enc ] && [ -n "$RAILS_MASTER_KEY" ]; then
  echo "==> Setting up credentials in development..."
  echo "$RAILS_MASTER_KEY" > config/master.key
  chmod 600 config/master.key
  EDITOR="echo" bundle exec rails credentials:edit
  rm config/master.key
fi

if [ "$RAILS_ENV" = "production" ] && [ -n "$DATABASE_PUBLIC_URL" ]; then
  primary_db=$(echo $DATABASE_PUBLIC_URL | sed 's/.*\///')
  base_url=$(echo $DATABASE_PUBLIC_URL | sed 's/\/[^\/]*$//')
  
  for db_suffix in "_prod_cache" "_prod_queue" "_prod_cable"; do
    db_name="my_delivery_app${db_suffix}"
    psql "${base_url}/postgres" -c "CREATE DATABASE ${db_name};" || \
    echo "Database ${db_name} já existe ou erro na criação"
  done
fi

# Executa o comando principal
exec "$@"